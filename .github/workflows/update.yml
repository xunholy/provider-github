name: Compare Terraform and Crossplane Resources

on:
  schedule:
    - cron: "0 0 * * *" # Run daily at midnight UTC
  workflow_dispatch: # Allow manual triggering

jobs:
  compare-resources:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Initialize Terraform
        run: terraform init

      - name: Get Terraform Provider Resources
        id: tf-resources
        run: |
          terraform_resources=$(terraform providers schema -json | jq -r '.provider_schemas."registry.terraform.io/integrations/github".resource_schemas | keys[]')
          echo "terraform_resources=$terraform_resources" >> $GITHUB_ENV

      - name: Extract Crossplane Supported Resources
        id: crossplane-resources
        run: |
          crossplane_resources=$(grep -oP '\"github_[^\"]+\"' config/external_name.go | sed 's/"//g')
          echo "crossplane_resources=$crossplane_resources" >> $GITHUB_ENV

      - name: Compare Resources and Report Missing
        id: compare
        run: |
          terraform_resources=$(echo "$terraform_resources" | tr ' ' '\n' | sort)
          crossplane_resources=$(echo "$crossplane_resources" | tr ' ' '\n' | sort)
          missing_resources=$(comm -23 <(echo "$terraform_resources") <(echo "$crossplane_resources"))
          echo "missing_resources=$missing_resources" >> $GITHUB_ENV
          if [ -n "$missing_resources" ]; then
            echo "The following resources are missing: $missing_resources"
          else
            echo "All Terraform resources are supported by Crossplane."
          fi

      - name: Create GitHub Issue for Missing Resources
        if: ${{ env.missing_resources != '' }}
        uses: actions/github-script@v6
        with:
          script: |
            const issueTitle = `Unsupported Terraform Resources in Crossplane`;
            const issueBody = `
            The following Terraform resources are available but not yet supported by the Crossplane provider:

            \`\`\`
            ${{ env.missing_resources }}
            \`\`\`

            Please prioritize adding support for these resources.
            `;

            const { data: issues } = await github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });

            const issueExists = issues.some(issue => issue.title === issueTitle);

            if (!issueExists) {
              await github.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issueTitle,
                body: issueBody
              });
            } else {
              console.log("Issue already exists for unsupported resources.");
            }
